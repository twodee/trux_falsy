var worlds = [];
{
  var levels = [];
  levels.push({name: 'Halftime', configuration: '1111100000111110000011111000001111100000111110000011111000001111100000111110000011111000001111100000', message: 'Make Actual match Expected! In the box above, enter an expression in terms of <code>x</code> and <code>y</code> that\'s true for all the colored tiles in Expected. For example, <code>y &gt;= 8</code>. Operators <code>&lt;</code>, <code>&lt;=</code>, and <code>&gt;</code> are also available.'});
  levels.push({name: 'Balcony', configuration: '0000000000000000000000000000000000000000000000000000000000001111111111000000000000000000000000000000', message: 'If you want to check that <code>x</code> or <code>y</code> is an exact value, use <code>==</code>. For example, <code>y == 0</code>.'});
  levels.push({name: 'Neg8', configuration: '1111111101111111110111111111011111111101111111110111111111011111111101111111110111111111011111111101', message: 'Sometimes you want <code>x</code> or <code>y</code> to not be a certain value. Use <code>!=</code> to assert this. For example, <code>y != 1</code>.'});
  levels.push({name: 'Dos Reglas', configuration: '0001000000000100000000010000000001000000111111111100010000000001000000000100000000010000000001000000', message: 'If there are multiple ways for a tile to be true, combine the criteria using OR. For example, <code>x == 0 OR y > 5</code>.'});
  levels.push({name: 'Building', configuration: '0000000000000000000000000000000000001111000000111100000011110000001111000000111100000011110000001111', message: 'If several criteria must all be met for a tile to be true, combine them using AND. For example, <code>x < 3 AND y == 3</code>.'});
  levels.push({name: 'Couple of Pairs', configuration: '1100000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', message: 'When you combine multiple criteria, watch out for operator precedence. AND has higher precedence than OR. Add parentheses to <code>x < 2 OR x > 7 AND y == 0</code> to solve this level.'});
  levels.push({name: 'Counterexample', configuration: '1111111111011111111101111111110111111111011111111101111111110111111111011111111101111111110111111111', message: 'Sometimes it\'s easier to think in reverse. Enter <code>x == 0 AND y > 0</code> in the box. This is the exact opposite of what you want. Flip the logic by negating the <i>entire</i> expression with the NOT operator.'});
  worlds.push(levels);
}
{
  var levels = [];
  levels.push({name: 'Flag', configuration: '0000000000000000000000000000000000000000000000000000000000001111100000111110000011111000001111100000'});
  levels.push({name: 'Alone', configuration: '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000'});
  levels.push({name: 'Hammer', configuration: '0000110000000011000000001100000000110000111111111111111111111111111111111111111111111111111111111111'});
  levels.push({name: 'Inbox', configuration: '0000000000000000000000000000000001111000000111100000011110000001111000000000000000000000000000000000'});
  levels.push({name: 'Bend', configuration: '1100000000110000000011000000001100000000110000000011000000001100000000110000000011111111111111111111'});
  levels.push({name: 'Exclamation', configuration: '1110000000000000000011100000001110000000111000000011100000001110000000111000000011100000001110000000'});
  levels.push({name: 'Intentionally', configuration: '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'});
  levels.push({name: 'Stripes', configuration: '1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010'});
  levels.push({name: 'Slant', configuration: '1000000000010000000000100000000001000000000010000000000100000000001000000000010000000000100000000001'});
  levels.push({name: 'Rampage', configuration: '0111111111001111111100011111110000111111000001111100000011110000000111000000001100000000010000000000'});
  levels.push({name: 'Flag', configuration: '1000000000100000000010000000001111111100111111110011111111001111111100111111110011111111001000000000'});
  levels.push({name: 'Not Alone', configuration: '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'});
  levels.push({name: 'Layers', configuration: '0000000000000000000011111111110000000000000000000011111111110000000000000000000011111111110000000000'});
  levels.push({name: 'Canyon', configuration: '1111111111111111111111111111111111111111111111111111111111111111111111000000000011111111111111111111'});
  levels.push({name: '99%', configuration: '1111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111'});
  levels.push({name: 'ET', configuration: '1111111110111111110011111110001111110000111110000011110000001110000000110000000010000000001111111111'});
  levels.push({name: 'Wedges', configuration: '0111111111101111111111011111111110111111111101111111111011111111110111111111101111111111011111111110'});
  levels.push({name: 'Tracks', configuration: '0100000000101000000001010000000010100000000101000000001010000000010100000000101000000001010000000010'});
  levels.push({name: 'Rank and File', configuration: '1101111111000000000011011111111101111111110111111111011111111101111111110111111111011111111101111111'});
  levels.push({name: 'Groups', configuration: '0101010101000000000001010101010101010101010101010100000000000101010101010101010101010101010000000000'});
  worlds.push(levels);
}
{
  var levels = [];
  levels.push({name: 'Dragonfly', configuration: '1000000010010000010100100010100001010100000010100000010100000010101000010100010010100000100100000001'});
  levels.push({name: 'Skip', configuration: '1010101010010101010110101010100101010101101010101001010101011010101010010101010110101010100101010101'});
  levels.push({name: 'Tic Tac Toe', configuration: '1111111111100100100110010010011111111111100100100110010010011111111111100100100110010010011111111111'});
  levels.push({name: 'Desks', configuration: '0000000000010101010100000000000101010101000000000001010101010000000000010101010100000000000101010101'});
  levels.push({name: 'Imbalance', configuration: '1000000000110000000011000000001100000000111000000011100000001110000000111000000011100000001111000000'});
  levels.push({name: 'River', configuration: '1110000000011100000000111000000001110000000011100000000111000000001110000000011100000000110000000001'});
  levels.push({name: 'Tee', configuration: '0000001100000000110000000011000000001100000000110000000011000000001100000000110011111111111111111111'});
  levels.push({name: 'Bookmark', configuration: '0000111111000111111100111111110111111111111111111111111111111111111111111111111111111111111111111111'});
  levels.push({name: 'Drift', configuration: '0000011111100001111111000111111110011111111101111111111011111111100111111110001111111000011111100000'});
  levels.push({name: 'Saw', configuration: '1111111111011101110100110011000001000100000000000000000000000000000000000000000000000000000000000000'});
  levels.push({name: 'Chip', configuration: '1111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000'});
  levels.push({name: 'Footprints', configuration: '0100000000100000000001000000001000000000010000000010000000000100000000100000000001000000001000000000'});
  levels.push({name: 'Jumping', configuration: '1000000000100000000001000000000100000000001000000000100000000001000000000100000000001000000000100000'});
  levels.push({name: 'Steps', configuration: '0111111111000111111100000111110000000111000000000100000000000000000000000000000000000000000000000000'});
  levels.push({name: 'Sandwich', configuration: '1111111111111111111111100000000000000000000000000000000000000000000000000000001111111111111111111111'});
  levels.push({name: 'Fraction', configuration: '1111111000111111100011111110001111110000111111000011111100001111110000111111000011111100001111110000'});
  levels.push({name: 'Erosion', configuration: '0101010101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'});
  levels.push({name: 'Unoriginal', configuration: '0111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'});
  levels.push({name: 'Sample', configuration: '1111111111111111111111111111110000111111111111111111111111111111111111111111111111111111111111111111'});
  levels.push({name: 'Square', configuration: '1111111111100000000110000000011000000001100000000110000000011000000001100000000110000000011111111111'});
  worlds.push(levels);
}
{
  var levels = [];
  levels.push({name: 'Waltz', configuration: '0000000000001001001001001001000000000000001001001001001001000000000000001001001001001001000000000000'});
  levels.push({name: 'Corners', configuration: '1100000001110000000100000000000000000000000000000000000000000000000000000000000000000000001100000001', message: 'Use the absolute value function <code>abs</code> to solve this one!'});
  levels.push({name: 'Stretchagon', configuration: '1111100000111111000011111110001111111100111111111001111111110011111111000111111100001111110000011111'});
  levels.push({name: 'Some of X', configuration: '0001000100001000100001000100011000100010000100010000100010000100010001100010001000010001000010001000'});
  levels.push({name: 'Great Panes', configuration: '1111111111100010001010101010101000100010111111111110001000101010101010100010001011111111111000100010'});
  levels.push({name: 'Wise Bits', configuration: '0011001100001100110000110011000011001100001100110000110011000011001100001100110000110011000011001100', message: 'Use bitwise <code>&</code> to solve this one!'});
  levels.push({name: 'Sparse', configuration: '1000000000000000000000100000000001000000000000000000000100000000001000000000000000000000100000000001'});
  levels.push({name: 'Cake', configuration: '1010101010010101010100000000000000000000101010101001010101010000000000000000000010101010100101010101'});
  levels.push({name: 'Bird', configuration: '0000000111000000111100000101110000111111000100011100110011110101010111111111111111111111111111111111'});
  levels.push({name: 'Sierpinksi', configuration: '1111111111010101010100110011000001000100000011110000000101000000001100000000010000000000110000000001'});
  levels.push({name: 'Cannon', configuration: '0001000000001000000001000000001000000000000000010000000010000000010000000010000000000000000000000000'});
  levels.push({name: 'Platformer', configuration: '1100110011000000000000110011000000000000110011001100000000000011001100000000000011001100110000000000'});
  levels.push({name: 'Hat and Beard', configuration: '1110000000110000000010000000000000000001000000001100000001110000001111000001111100001111110001111111'});
  levels.push({name: 'Pair of Couples', configuration: '0000000000001100000000000000000011000000000000000000000011000000000000000000110000000000000000000000'});
  levels.push({name: 'Walrus', configuration: '0000111100000011110000001111000000111100111100001111110000111111000011111100001100001111000000111100'});
  levels.push({name: 'Square Wave', configuration: '0010010010001001001011100100100000010010000001001011111100100000000010000000001011111111100000000000', message: 'Hey! <code>max(a, b)</code> evaluates to the bigger of <code>a</code> and <code>b</code>. Just thought you might like to know.'});
  levels.push({name: 'Check', configuration: '0011001100001100110011001100111100110011001100110000110011001100110011110011001100110011000011001100'});
  levels.push({name: 'Lotsa Dots', configuration: '0111011101101110111011011101111110111011011101110110111011101101110111111011101101110111011011101110'});
  levels.push({name: 'Stairing Contest', configuration: '0000111100001111000011110000111100001111000011110000111100001111000011110000111100001111000011110000'});
  levels.push({name: 'Glasses', configuration: '0000000000000000000000000000000000000111000000111100000011110000110001000111000100011100010001111110'});
  levels.push({name: 'Russian', configuration: '1111111111100000000010111111101010000010101011101010101010101010111010101000001010111111101000000000'});
  worlds.push(levels);
}
